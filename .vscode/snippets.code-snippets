{
	// Place your hello-world workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"FunctionComponent": {
		"scope": "typescriptreact",
		"prefix": "pl",
		"body": [
      "import React from 'react';",
      "",
      "type $1Props = {};",
      "",
      "const ${1:${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}}: React.FunctionComponent<$1Props> = props => {$0};",
      "",
      "$1.displayName = '$1';",
      "",
      "export default $1;",
		],
		"description": "Creates a new FunctionComponent"
  },
  "Component": {
		"scope": "typescriptreact",
		"prefix": "pl",
		"body": [
      "import React from 'react';",
      "",
      "type $1Props = {};",
      "",
      "type $1State = {};",
      "",
      "class ${1:${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}} extends React.Component<$1Props, $1State> {",
      "  public static displayName: string = '$1';$0",
      "}",
      "",
      "export default $1;",
		],
		"description": "Creates a new Component"
  },
  "FunctionComponentDisplayName" :{
    "scope": "typescriptreact",
		"prefix": "pl",
		"body": [
      "${1:${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}}.displayName = '$1';$0",
		],
		"description": "Adds displayName an existing FunctionComponent"
  },
  "ComponentDisplayName": {
    "scope": "typescriptreact",
		"prefix": "pl",
		"body": [
      "public static displayName: string = '${1:${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}}';$0",
		],
		"description": "Adds displayName an existing Component"
  }
}
